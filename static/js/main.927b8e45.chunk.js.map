{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","sm","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","vriant","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","imgContainer","src","coronaImage","alt","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.927b8e45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"confirmed\":\"Cards_confirmed__iMMyf\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) =>{\n    if(!confirmed){\n        return 'Loading...';\n    }\n\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} sm={3} className={cx([styles.card, styles.confirmed])}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography vriant='body2'>Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12}  sm={3} className={cx([styles.card, styles.recovered])}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography vriant='body2'>Number of recoveries of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} sm={3} className={cx([styles.card, styles.deaths])}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography vriant='body2'>Number of deaths from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n            </Grid >\n        </div>\n    )\n}\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api'\n\nexport const fetchData = async (country) =>{\n    let changeableUrl = url;\n    if(country){\n        changeableUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\n        return {confirmed, recovered, deaths, lastUpdate}\n\n    } catch (error) {\n\n    }\n}\n\n\nexport const fetchDailyData = async () =>{\n    try {\n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n        return []\n    }\n}\n\n\nexport const fetchCountries = async () =>{\n    const { data:{countries} } = await axios.get(`${url}/countries`);\n    return countries.map(country => country.name);\n}\n\nexport default fetchCountries;\n","import React, {useState, useEffect} from 'react';\nimport {Line, Bar} from 'react-chartjs-2';\nimport {fetchDailyData} from '../../api';\nimport styles from './Chart.module.css';\n\n\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) =>{\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() =>{\n        const fetchAPI = async () =>{\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    }, []);\n\n    const barChart = (\n        confirmed\n        ?(\n            <Bar\n                data = {{\n                    labels:['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0, 0, 255, 0.5)',\n                            'rgba(0, 255, 0, 0.5)',\n                            'rgba(255, 0, 0, 0.5)'\n                        ],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n                 }}\n                options = {{\n                    legend: { display:false},\n                    title:  { display:true, text: `Current State in ${country}`}\n\n                }}\n\n            />\n        ): null\n    )\n\n    const lineChart = (\n        dailyData.length\n        ?(\n        <Line\n            data={\n                {\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyData.map(({confirmed}) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true\n                    },\n\n                    {\n                        data: dailyData.map(({confirmed}) => confirmed),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255, 0,0, 0.5)',\n                        fill: true\n                    }],\n                }\n            }\n\n        />) : null\n\n    );\n\n    return (\n        <div className={styles.container}>\n            { country ? barChart : lineChart }\n        </div>\n    )\n}\n\nexport default Chart;\n","import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport {fetchCountries} from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) =>{\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () =>{\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    }, [setFetchedCountries])\n\n\n    return (\n        <FormControl className={styles.FormControl}>\n            <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\nimport {Cards, CountryPicker, Chart} from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api'\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component{\n    state = {\n        data: {},\n        country: ''\n    }\n\n    handleCountryChange = async (country) =>{\n        // fetch the data, then set the state\n        try{\n            const fetchedData = await fetchData(country);\n            this.setState({data: fetchedData, country:country});\n        }catch(e){\n            console.log(e)\n        }\n\n\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n        this.setState({data: fetchedData});\n    }\n\n    render(){\n        const {data, country} = this.state;\n        return (\n            <div className={styles.container}>\n                <div className={ styles.imgContainer}>\n                    <img src={coronaImage} alt=\"SIRS-Cov2\" className={styles.image}/>\n                </div>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange= { this.handleCountryChange }/>\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};"],"sourceRoot":""}